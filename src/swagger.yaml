openapi: 3.0.0
info:
  title: FitnessAnalyze API
  description: API documentation for the FitnessAnalyze application
  version: 1.0.0
  contact:
    email: support@fitnessanalyze.com

servers:
  - url: http://localhost:5000
    description: Development server
  - url: https://api.fitnessanalyze.com
    description: Production server

tags:
  - name: Authentication
    description: User authentication endpoints
  - name: Profile
    description: User profile management
  - name: Strava
    description: Strava integration endpoints
  - name: Training Plans
    description: Training plan management
  - name: Records
    description: Workout records management

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        name:
          type: string
        createdAt:
          type: string
          format: date-time
    
    TrainingPlan:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        duration:
          type: integer
          description: Duration in weeks
        difficulty:
          type: string
          enum: [beginner, intermediate, advanced]
        exercises:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              sets:
                type: integer
              reps:
                type: integer
    
    WorkoutRecord:
      type: object
      properties:
        id:
          type: string
          format: uuid
        date:
          type: string
          format: date-time
        type:
          type: string
        duration:
          type: integer
          description: Duration in minutes
        calories:
          type: integer
        notes:
          type: string

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                name:
                  type: string
      responses:
        '201':
          description: User successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
  
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Invalid credentials

  /profile:
    get:
      tags:
        - Profile
      summary: Get user profile
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
    
    put:
      tags:
        - Profile
      summary: Update user profile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Profile updated successfully
        '401':
          description: Unauthorized

  /strava/connect:
    get:
      tags:
        - Strava
      summary: Connect Strava account
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Strava OAuth URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
        '401':
          description: Unauthorized

  /strava/callback:
    get:
      tags:
        - Strava
      summary: Strava OAuth callback
      parameters:
        - in: query
          name: code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Strava connection successful
        '400':
          description: Invalid code

  /training-plans:
    get:
      tags:
        - Training Plans
      summary: Get all training plans
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of training plans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrainingPlan'
    
    post:
      tags:
        - Training Plans
      summary: Create a new training plan
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingPlan'
      responses:
        '201':
          description: Training plan created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingPlan'

  /records:
    get:
      tags:
        - Records
      summary: Get workout records
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of workout records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkoutRecord'
    
    post:
      tags:
        - Records
      summary: Create a new workout record
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkoutRecord'
      responses:
        '201':
          description: Workout record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkoutRecord' 